import { createBackendModule } from '@backstage/backend-plugin-api';
import { policyExtensionPoint } from '@backstage/plugin-permission-node/alpha';
import { configApiRef, ConfigApi } from '@backstage/core-plugin-api'; // Import ConfigApi

import { AOpenFgaCatalogPolicy } from './policy';

// Export AnalyticsContext separately if needed (though this is not part of the current change)
export { AnalyticsContext } from './AnalyticsContext';

export const permissionModuleACatalogPolicy = createBackendModule({
  pluginId: 'permission',
  moduleId: 'a-name-policy',
  register(reg) {
    reg.registerInit({
      deps: { policy: policyExtensionPoint, configApi: configApiRef }, // Inject ConfigApi
      async init({ policy, configApi }: { policy: any; configApi: ConfigApi }) { // Use proper typing
        // Now you can use configApi to fetch configuration from app-config.yaml
        const openFgaBaseUrl = configApi.getString('openFga.baseUrl');
        const openFgaStoreId = configApi.getString('openFga.storeId');
        const authorizationModelId = configApi.getString('openFga.authorizationModelId');

        // Register the policy
        policy.setPolicy(new AOpenFgaCatalogPolicy({ openFgaBaseUrl, openFgaStoreId, authorizationModelId }));
      },
    });
  },
});